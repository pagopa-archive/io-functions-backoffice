version: "3.2"

services:

  functions-backoffice:
    image: functions-template:v2.0.0
    build:
      context: ./
      dockerfile: docker/functions/Dockerfile
    env_file:
      - .env
    environment:
      - languageWorkers__node__arguments=--inspect=0.0.0.0:5858
    working_dir: /usr/src/app
    ports:
      - "7071:7071"
      - "5858:5858"
    networks:
      - io-fn
    depends_on:
      - fnstorage
      - fixtures
      - redis
    volumes:
      - .:/usr/src/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.functions-backoffice.rule=PathPrefix(`/backoffice`)"
      - "traefik.http.routers.functions-backoffice.entrypoints=web"
      - "traefik.http.services.functions-backoffice.loadbalancer.server.port=7071"

      # apply middleware to route
      - "traefik.http.routers.functions-backoffice.middlewares=cors-header,fn-backoffice-replacepathregex,fn-backoffice-stripprefix"

  fnstorage:
    image: azurite
    build:
      context: ./
      dockerfile: docker/azurite/Dockerfile
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    networks:
      - io-fn
    depends_on:
      - redis

  storage:
    image: azurite
    command: ["sh", "-c", "node bin/azurite -l /opt/azurite/folder --blobPort 10003 --queuePort 10004 --tablePort 10005"]
    ports:
      - "10003:10003"
      - "10004:10004"
      - "10005:10005"
    depends_on:
      - fnstorage
    networks:
      - io-fn

  fixtures:
    image: fixtures
    env_file:
      - .env
    build:
      context: ./
      dockerfile: docker/fixtures/Dockerfile
    volumes:
      - ./docker/fixtures/dump.pgsql:/opt/fixtures/dump.pgsql:delegated
      - ./docker/fixtures/drop.pgsql:/opt/fixtures/drop.pgsql:delegated
      - ./docker/fixtures/grant.pgsql:/opt/fixtures/grant.pgsql:delegated
    depends_on:
      - postgres
    networks:
      - io-fn
    labels:
      - "traefik.enable=false"

  postgres:
    image: postgres
    build:
      context: ./
      dockerfile: docker/postgres/Dockerfile
    command: -c ssl=on -c ssl_cert_file=/var/lib/postgresql/server.crt -c ssl_key_file=/var/lib/postgresql/server.key
    ports:
      - "5532:5432"
    environment:
      POSTGRES_USER: testuser
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: test

  traefik:
    image: traefik:v2.0
    command: |-
      --accesslog
      --entrypoints.web.address=:80
      --providers.docker=true
      --providers.docker.network=io-fn
      --log.level=ERROR
    ports:
      - 80:80
    networks:
      - io-fn
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      # Add API prefix
      - "traefik.http.middlewares.fn-backoffice-stripprefix.stripprefix.prefixes=/backoffice"
      # CORS
      - "traefik.http.middlewares.cors-header.headers.accesscontrolallowmethods=GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS"
      - "traefik.http.middlewares.cors-header.headers.accesscontrolallowheaders=authorization,x-citizen-id"
      #- "traefik.http.middlewares.cors-header.headers.contentsecuritypolicy=default-src 'none'; upgrade-insecure-requests"
      - "traefik.http.middlewares.cors-header.headers.accesscontrolalloworigin=*"
      - "traefik.http.middlewares.cors-header.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors-header.headers.addvaryheader=true"
      #- "traefik.http.middlewares.cors-header.headers.contenttypenosniff=true"
      #- "traefik.http.middlewares.cors-header.headers.framedeny=true"
      #- "traefik.http.middlewares.cors-header.headers.browserxssfilter=true"
      - "traefik.http.middlewares.fn-backoffice-replacepathregex.replacepathregex.regex=^/backoffice/(.*)"
      - "traefik.http.middlewares.fn-backoffice-replacepathregex.replacepathregex.replacement=/backoffice/api/v1/$$1"

  redis:
    container_name: redis-backoffice
    image: wodby/redis:3.2-2.1.5
    ports:
      - "6379:6379"
    environment:
      REDIS_TIMEOUT: 300
      REDIS_TCP_KEEPALIVE: 60
      REDIS_MAXMEMORY: 182m
    networks:
      - io-fn
networks:
  io-fn:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
