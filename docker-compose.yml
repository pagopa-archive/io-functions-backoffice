version: "3.2"

services:

  functions-backoffice:
    image: functions-template:v2.0.0
    build:
      context: ./
      dockerfile: docker/functions/Dockerfile
    env_file: 
      - env.example
    environment:
      - languageWorkers__node__arguments=--inspect=0.0.0.0:5858
    working_dir: /usr/src/app
    ports:
      - "80:7071"
      - "5858:5858"
    networks:
      - io-fn
    depends_on:
      - fnstorage
      - fixtures
    volumes:
      - .:/usr/src/app

  fnstorage:
    image: azurite
    build:
      context: ./
      dockerfile: docker/azurite/Dockerfile
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    networks:
      - io-fn

  storage:
    image: azurite
    command: ["sh", "-c", "node bin/azurite -l /opt/azurite/folder --blobPort 10003 --queuePort 10004 --tablePort 10005"]
    ports:
      - "10003:10003"
      - "10004:10004"
      - "10005:10005"
    depends_on:
      - fnstorage
    networks:
      - io-fn

  fixtures:
    image: fixtures
    env_file:
      - env.example
    build:
      context: ./
      dockerfile: docker/fixtures/Dockerfile
    volumes:
      - ./docker/fixtures/dump.pgsql:/opt/fixtures/dump.pgsql:delegated
    depends_on:
      - postgres
    networks:
      - io-fn

  postgres:
    image: postgres
    build:
      context: ./
      dockerfile: docker/postgres/Dockerfile
    restart: always
    command: -c ssl=on -c ssl_cert_file=/var/lib/postgresql/server.crt -c ssl_key_file=/var/lib/postgresql/server.key
    ports:
      - "5532:5432"
    environment:
      POSTGRES_USER: testuser
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: test

networks:
  io-fn:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
