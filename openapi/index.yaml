swagger: "2.0"
info:
  version: 1.1.0
  title: IO Function Backoffice
  contact:
    name: IO team
    url: https://forum.italia.it/c/progetto-io
  x-logo:
    url: https://io.italia.it/assets/img/io-logo-blue.svg
  description: >
    Documentation of the io-function-backoffice
host: backoffice-api.io.italia.it
basePath: "/api/v1"
schemes:
  - https
security:
  - Bearer: []
paths:
  "/bpd/citizen":
    parameters:
      - $ref: "#/parameters/CitizenID"
    get:
      operationId: GetBPDCitizen
      summary: Get BPD Citizen info
      description: Get the Citizen BPD info
      responses:
        "200":
          description: Found.
          schema:
            "$ref": "#/definitions/BPDCitizen"
          examples:
            application/json:
              fiscal_code: "AAABBB01C02D345A"
              timestamp_tc: "2011-10-05T14:48:00.000Z"
              payoff_instr: "IT90M0300203280482653729744"
              payoff_instr_type: "IBAN"
              enabled: "true"
              insert_date: "2011-10-05T14:48:00.000Z"
              insert_user: "Bank"
              update_date: "2011-10-05T14:48:00.000Z"
              update_user: "Bank"
              payment_methods:
                - payment_instrument_hpan: "9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08"
                  payment_instrument_status: "ACTIVE"
                  payment_instrument_insert_date: "2011-10-05T14:48:00.000Z"
                  payment_instrument_insert_user: "Bank"
                  payment_instrument_update_date: "2011-10-05T14:48:00.000Z"
                  payment_instrument_update_user: "Bank"
        "400":
          description: Invalid request.
          schema:
            $ref: "#/definitions/ProblemJson"
        "401":
          description: Unauthorized
        "404":
          description: Not found.
          schema:
            $ref: "#/definitions/ProblemJson"
        "500":
          description: Internal server Error
          schema:
            $ref: "#/definitions/ProblemJson"
  "/bpd/transactions":
    parameters:
        - $ref: "#/parameters/CitizenID"
    get:
      operationId: GetBPDTransactions
      summary: Get BPD transactions info list
      description: Get the BPD transactions info list
      responses:
        "200":
          description: Found.
          schema:
            "$ref": "#/definitions/BPDTransactionList"
        "400":
          description: Invalid request.
          schema:
            $ref: "#/definitions/ProblemJson"
        "401":
          description: Unauthorized
        "500":
          description: Internal server Error
          schema:
            $ref: "#/definitions/ProblemJson"
consumes:
  - application/json
produces:
  - application/json
definitions:
  FiscalCode:
    $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/v10.7.0/openapi/definitions.yaml#/FiscalCode"
  ProblemJson:
    $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/v10.7.0/openapi/definitions.yaml#/ProblemJson"
  BPDCitizen:
    type: object
    properties:
      fiscal_code:
        $ref: "#/definitions/FiscalCode"
      timestamp_tc:
        type: string
        format: dateTime
      payoff_instr:
        type: string
      payoff_instr_type:
        type: string
      insert_date:
        type: string
        format: dateTime
      insert_user:
        type: string
      update_date:
        type: string
        format: dateTime
      update_user:
        type: string
      enabled:
        type: boolean
      payment_methods:
        type: array
        items:
          $ref: "#/definitions/PaymentMethod"
    required:
      - fiscal_code
      - timestamp_tc
      - payment_methods
  PaymentMethod:
    type: object
    properties:
      payment_instrument_hpan:
        type: string
      payment_instrument_status:
        type: string
        enum: [ACTIVE, INACTIVE]
      payment_instrument_insert_date:
        type: string
        format: dateTime
      payment_instrument_insert_user:
        type: string
      payment_instrument_update_date:
        type: string
        format: dateTime
      payment_instrument_update_user:
        type: string
    required:
      - payment_instrument_hpan
      - payment_instrument_status
  SupportToken:
    type: string
    pattern: "^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*$"
    description: A JWT token used by Support Team
  CitizenID:
    description: Fiscal Code or Support Token for Citizen Identification
    x-one-of: true
    allOf:
      - $ref: "#/definitions/FiscalCode"    
      - $ref: "#/definitions/SupportToken"

  BPDTransactionList:
    type: object
    properties:
      transactions:
        type: array
        items:
          $ref: "#/definitions/BPDTransaction"
    required:
      - transactions
  BPDTransaction:
    type: object
    properties:
      hpan:
        type: string
      trx_timestamp:
        type: string
        format: dateTime
      acquirer_id:
        type: string
      acquirer_descr:
        type: string
      id_trx_acquirer:
        type: string
      id_trx_issuer:
        type: string
      operation_type_id:
        type: string
      circuit_type:
        type: string
      amount:
        type: number
      amount_currency:
        type: string
      score:
        type: number
      award_period_id:
        type: number
      insert_date:
        type: string
        format: dateTime
      insert_user:
        type: string
      update_date:
        type: string
        format: dateTime
      update_user:
        type: string
      merchant_id:
        type: string
      correlation_id:
        type: string
      bin:
        type: string
      terminal_id:
        type: string
      enabled:
        type: boolean
    required:
      - acquirer_descr
      - id_trx_acquirer
      - trx_timestamp
      - hpan
parameters:
  CitizenID:
    name: x-citizen-id
    in: header
    description: The fiscal code of the user or the JWT' s support token
    type: string
    required: true
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
